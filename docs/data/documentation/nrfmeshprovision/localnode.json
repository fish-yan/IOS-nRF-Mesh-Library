{"identifier":{"url":"doc:\/\/nRFMeshProvision\/documentation\/nRFMeshProvision\/LocalNode","interfaceLanguage":"swift"},"primaryContentSections":[{"kind":"content","content":[{"anchor":"Overview","level":2,"text":"Overview","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The mobile application using nRF Mesh library is itself a mesh node, called the "},{"inlineContent":[{"type":"text","text":"local node"}],"type":"emphasis"},{"type":"text","text":"."},{"text":" ","type":"text"},{"text":"Being a node means, that it defines one or more ","type":"text"},{"inlineContent":[{"text":"Elements","type":"text"}],"type":"emphasis"},{"text":", each with one or more ","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"Models"}]},{"type":"text","text":" which support"},{"type":"text","text":" "},{"text":"sending and receiving messages.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The library automatically supports the following models:"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"inlineContent":[{"text":"Configuration Server","type":"text"}],"type":"emphasis"},{"type":"text","text":" (required for all nodes)"}]}]},{"content":[{"inlineContent":[{"type":"emphasis","inlineContent":[{"type":"text","text":"Configuration Client"}]},{"type":"text","text":" (required for configuring nodes)"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"inlineContent":[{"text":"Health Server","type":"text"}],"type":"emphasis"},{"type":"text","text":" (required for all nodes)"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"emphasis","inlineContent":[{"text":"Health Client","type":"text"}]},{"type":"text","text":" (currently not implemented)"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"emphasis","inlineContent":[{"type":"text","text":"Private Beacon Client"}]},{"type":"text","text":" (experimental)"}]}]},{"content":[{"inlineContent":[{"type":"emphasis","inlineContent":[{"type":"text","text":"Scene Client"}]},{"type":"text","text":" (for controlling scenes)"}],"type":"paragraph"}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"and may be extended to support user models: either Bluetooth SIG defined, like "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Generic OnOff Client"}]},{"type":"text","text":","},{"type":"text","text":" "},{"type":"text","text":"or vendor models."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The elements on the "},{"inlineContent":[{"type":"text","text":"local node"}],"type":"emphasis"},{"text":" must be configured using ","type":"text"},{"identifier":"doc:\/\/nRFMeshProvision\/documentation\/nRFMeshProvision\/MeshNetworkManager\/localElements","type":"reference","isActive":true},{"text":" property.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Each model declared in this array must have a "},{"isActive":true,"identifier":"doc:\/\/nRFMeshProvision\/documentation\/nRFMeshProvision\/ModelDelegate","type":"reference"},{"type":"text","text":" implemented, which maps the"},{"type":"text","text":" "},{"type":"text","text":"Op Codes of supported messages to their types, and defines the behavior of the model."},{"type":"text","text":" "},{"type":"text","text":"For example, a model delegate can specify that it can handle messages with an Op Code "},{"inlineContent":[{"text":"0x8204","type":"text"}],"type":"emphasis"},{"type":"text","text":","},{"text":" ","type":"text"},{"text":"which should be decoded to ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/nRFMeshProvision\/documentation\/nRFMeshProvision\/GenericOnOffStatus"},{"type":"text","text":" type."}]},{"type":"codeListing","code":["\/\/ Mind, that the first Element will contain the models mentioned above.","let primaryElement = Element(name: \"Primary Element\", location: .first, ","        models: [","            \/\/ Generic OnOff Client model:","            Model(sigModelId: .genericOnOffClientModelId, ","                  delegate: GenericOnOffClientDelegate()),","            \/\/ A simple vendor model:","            Model(vendorModelId: .simpleOnOffModelId,","                  companyId: .nordicSemiconductorCompanyId,","                  delegate: SimpleOnOffClientDelegate())","        ]",")","meshNetworkManager.localElements = [primaryElement]"],"syntax":"swift"},{"type":"aside","name":"Important","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Even if your implementation does not add any models to the default set, it is required to"},{"type":"text","text":" "},{"type":"text","text":"set the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/nRFMeshProvision\/documentation\/nRFMeshProvision\/MeshNetworkManager\/localElements"},{"text":". It can be set to an empty array.","type":"text"}]}],"style":"important"},{"type":"paragraph","inlineContent":[{"text":"The model delegate is notified when a message targetting the model is received if, and only if, the model","type":"text"},{"text":" ","type":"text"},{"text":"is bound to the Application Key used to encrypt the message and is subscribed to its destination","type":"text"},{"type":"text","text":" "},{"text":"address.","type":"text"}]},{"type":"aside","name":"Tip","content":[{"inlineContent":[{"type":"text","text":"The "},{"type":"reference","identifier":"doc:\/\/nRFMeshProvision\/documentation\/nRFMeshProvision\/MeshNetworkDelegate","isActive":true},{"type":"text","text":", set in the manager, is notified about every message"},{"type":"text","text":" "},{"type":"text","text":"received. This includes messages targeting models that are not configured to receive messages,"},{"text":" ","type":"text"},{"type":"text","text":"i.e. not bound to any key, or not subscribed to the address set as destination address of the"},{"text":" ","type":"text"},{"text":"message. If a received message cannot be mapped to any message type (i.e. no local model","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"supports the op code of received message), it will be decoded as "},{"type":"reference","isActive":true,"identifier":"doc:\/\/nRFMeshProvision\/documentation\/nRFMeshProvision\/UnknownMessage"},{"type":"text","text":"."}],"type":"paragraph"}],"style":"tip"},{"content":[{"inlineContent":[{"type":"text","text":"See "},{"type":"codeVoice","code":"Example\/nRFMeshProvision\/AppDelegate.swift"},{"type":"text","text":" in “nRF Mesh” sample app for an example."}],"type":"paragraph"}],"style":"note","name":"Note","type":"aside"}]}],"hierarchy":{"paths":[["doc:\/\/nRFMeshProvision\/documentation\/nRFMeshProvision"],["doc:\/\/nRFMeshProvision\/documentation\/nRFMeshProvision","doc:\/\/nRFMeshProvision\/documentation\/nRFMeshProvision\/MeshNetworkManager"]]},"metadata":{"role":"article","roleHeading":"Article","modules":[{"name":"nRFMeshProvision"}],"title":"Setting up Local Node"},"schemaVersion":{"minor":3,"patch":0,"major":0},"abstract":[{"type":"text","text":"Defining the behavior of the node."}],"kind":"article","seeAlsoSections":[{"identifiers":["doc:\/\/nRFMeshProvision\/documentation\/nRFMeshProvision\/Exporting","doc:\/\/nRFMeshProvision\/documentation\/nRFMeshProvision\/Provisioning","doc:\/\/nRFMeshProvision\/documentation\/nRFMeshProvision\/Configuration","doc:\/\/nRFMeshProvision\/documentation\/nRFMeshProvision\/SendingMessages"],"generated":true,"title":"Articles"}],"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/nrfmeshprovision\/localnode"]}],"references":{"doc://nRFMeshProvision/documentation/nRFMeshProvision/GenericOnOffStatus":{"role":"symbol","url":"\/documentation\/nrfmeshprovision\/genericonoffstatus","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"GenericOnOffStatus"}],"type":"topic","title":"GenericOnOffStatus","identifier":"doc:\/\/nRFMeshProvision\/documentation\/nRFMeshProvision\/GenericOnOffStatus","navigatorTitle":[{"text":"GenericOnOffStatus","kind":"identifier"}],"kind":"symbol","abstract":[]},"doc://nRFMeshProvision/documentation/nRFMeshProvision/MeshNetworkManager/localElements":{"url":"\/documentation\/nrfmeshprovision\/meshnetworkmanager\/localelements","title":"localElements","identifier":"doc:\/\/nRFMeshProvision\/documentation\/nRFMeshProvision\/MeshNetworkManager\/localElements","abstract":[{"type":"text","text":"An array of Elements of the local Node."}],"role":"symbol","kind":"symbol","type":"topic","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"localElements","kind":"identifier"},{"text":": [","kind":"text"},{"preciseIdentifier":"s:16nRFMeshProvision7ElementC","kind":"typeIdentifier","text":"Element"},{"kind":"text","text":"]"}]},"doc://nRFMeshProvision/documentation/nRFMeshProvision/ModelDelegate":{"role":"symbol","url":"\/documentation\/nrfmeshprovision\/modeldelegate","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"ModelDelegate","kind":"identifier"}],"title":"ModelDelegate","type":"topic","identifier":"doc:\/\/nRFMeshProvision\/documentation\/nRFMeshProvision\/ModelDelegate","navigatorTitle":[{"kind":"identifier","text":"ModelDelegate"}],"kind":"symbol","abstract":[{"type":"text","text":"Model delegate defines the functionality of a "},{"isActive":true,"type":"reference","identifier":"doc:\/\/nRFMeshProvision\/documentation\/nRFMeshProvision\/Model"},{"text":" on the","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Local Node."}]},"doc://nRFMeshProvision/documentation/nRFMeshProvision/SendingMessages":{"url":"\/documentation\/nrfmeshprovision\/sendingmessages","title":"Sending messages","type":"topic","abstract":[{"text":"Bluetooth mesh is built on publish-subscribe paradigm. Each node can publish messages and receive messages","type":"text"},{"type":"text","text":" "},{"text":"sent by other nodes.","type":"text"}],"kind":"article","role":"article","identifier":"doc:\/\/nRFMeshProvision\/documentation\/nRFMeshProvision\/SendingMessages"},"doc://nRFMeshProvision/documentation/nRFMeshProvision/Exporting":{"url":"\/documentation\/nrfmeshprovision\/exporting","title":"Exporting network configuration","identifier":"doc:\/\/nRFMeshProvision\/documentation\/nRFMeshProvision\/Exporting","abstract":[{"text":"Export and import feature allows to share mesh network configuration between","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"devices."}],"role":"article","kind":"article","type":"topic"},"doc://nRFMeshProvision/documentation/nRFMeshProvision/MeshNetworkDelegate":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MeshNetworkDelegate","kind":"identifier"}],"type":"topic","title":"MeshNetworkDelegate","navigatorTitle":[{"kind":"identifier","text":"MeshNetworkDelegate"}],"abstract":[{"text":"The mesh network delegate notifies about all received messages as well as","type":"text"},{"text":" ","type":"text"},{"text":"statuses of sent messages.","type":"text"}],"identifier":"doc:\/\/nRFMeshProvision\/documentation\/nRFMeshProvision\/MeshNetworkDelegate","role":"symbol","kind":"symbol","url":"\/documentation\/nrfmeshprovision\/meshnetworkdelegate"},"doc://nRFMeshProvision/documentation/nRFMeshProvision/Model":{"identifier":"doc:\/\/nRFMeshProvision\/documentation\/nRFMeshProvision\/Model","title":"Model","type":"topic","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Model"}],"navigatorTitle":[{"text":"Model","kind":"identifier"}],"role":"symbol","kind":"symbol","abstract":[{"text":"A Model defines the basic functionality of a ","type":"text"},{"isActive":true,"identifier":"doc:\/\/nRFMeshProvision\/documentation\/nRFMeshProvision\/Node","type":"reference"},{"type":"text","text":"."}],"url":"\/documentation\/nrfmeshprovision\/model"},"doc://nRFMeshProvision/documentation/nRFMeshProvision/Provisioning":{"url":"\/documentation\/nrfmeshprovision\/provisioning","title":"Provisioning","type":"topic","abstract":[{"type":"text","text":"Provisioning is the process of adding an unprovisioned device to a mesh network in a secure way."}],"kind":"article","role":"article","identifier":"doc:\/\/nRFMeshProvision\/documentation\/nRFMeshProvision\/Provisioning"},"doc://nRFMeshProvision/documentation/nRFMeshProvision/MeshNetworkManager":{"type":"topic","kind":"symbol","title":"MeshNetworkManager","identifier":"doc:\/\/nRFMeshProvision\/documentation\/nRFMeshProvision\/MeshNetworkManager","abstract":[{"text":"The main object responsible for managing the mesh network.","type":"text"}],"navigatorTitle":[{"text":"MeshNetworkManager","kind":"identifier"}],"role":"symbol","url":"\/documentation\/nrfmeshprovision\/meshnetworkmanager","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"MeshNetworkManager"}]},"doc://nRFMeshProvision/documentation/nRFMeshProvision":{"kind":"symbol","type":"topic","role":"collection","title":"nRFMeshProvision","url":"\/documentation\/nrfmeshprovision","identifier":"doc:\/\/nRFMeshProvision\/documentation\/nRFMeshProvision","abstract":[{"text":"Provision, configure and control Bluetooth mesh devices with nRF Mesh library.","type":"text"}]},"doc://nRFMeshProvision/documentation/nRFMeshProvision/UnknownMessage":{"type":"topic","abstract":[{"text":"The unknown message is returned if no local Model defines","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"a message type for the received Op Code."}],"identifier":"doc:\/\/nRFMeshProvision\/documentation\/nRFMeshProvision\/UnknownMessage","title":"UnknownMessage","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"UnknownMessage"}],"role":"symbol","url":"\/documentation\/nrfmeshprovision\/unknownmessage","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"UnknownMessage","kind":"identifier"}]},"doc://nRFMeshProvision/documentation/nRFMeshProvision/Configuration":{"url":"\/documentation\/nrfmeshprovision\/configuration","title":"Configuration","type":"topic","abstract":[{"type":"text","text":"Configuration allows to customize the behavior of the local and remote nodes."}],"kind":"article","role":"article","identifier":"doc:\/\/nRFMeshProvision\/documentation\/nRFMeshProvision\/Configuration"}}}