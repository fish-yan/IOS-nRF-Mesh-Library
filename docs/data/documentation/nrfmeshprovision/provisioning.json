{"identifier":{"url":"doc:\/\/nRFMeshProvision\/documentation\/nRFMeshProvision\/Provisioning","interfaceLanguage":"swift"},"sections":[],"hierarchy":{"paths":[["doc:\/\/nRFMeshProvision\/documentation\/nRFMeshProvision"]]},"schemaVersion":{"minor":3,"major":0,"patch":0},"seeAlsoSections":[{"identifiers":["doc:\/\/nRFMeshProvision\/documentation\/nRFMeshProvision\/LocalNode","doc:\/\/nRFMeshProvision\/documentation\/nRFMeshProvision\/Exporting","doc:\/\/nRFMeshProvision\/documentation\/nRFMeshProvision\/Configuration","doc:\/\/nRFMeshProvision\/documentation\/nRFMeshProvision\/SendingMessages"],"generated":true,"title":"Articles"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/nrfmeshprovision\/provisioning"]}],"abstract":[{"text":"Provisioning is the process of adding an unprovisioned device to a mesh network in a secure way.","type":"text"}],"kind":"article","primaryContentSections":[{"content":[{"level":2,"text":"Overview","type":"heading","anchor":"Overview"},{"type":"paragraph","inlineContent":[{"text":"The provisioner, in a secure way, assigns a Unicast Address and sends the Network Key to the device.","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"Knowing the key, the new device, now called a Node, can exchange mesh messages with other nodes."}]},{"name":"Note","style":"note","content":[{"inlineContent":[{"text":"To provision a new device, the provisioner does not need to have an address assigned. Having a","type":"text"},{"type":"text","text":" "},{"text":"Unicast Address makes the provisioner a configuration manager node.","type":"text"}],"type":"paragraph"}],"type":"aside"},{"inlineContent":[{"type":"text","text":"A configuration manager may configure nodes after they have been provisioned."},{"type":"text","text":" "},{"type":"text","text":"Configuration messages are sent between "},{"inlineContent":[{"text":"Configuration Client","type":"text"}],"type":"emphasis"},{"text":" model on the manager","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"and "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Configuration Server"}]},{"text":" model on the target device, and, on the Upper Transport layer, are encrypted","type":"text"},{"type":"text","text":" "},{"type":"text","text":"using the nodeâ€™s Device Key, generated during provisioning."}],"type":"paragraph"},{"inlineContent":[{"text":"To provision a new device, use ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/nRFMeshProvision\/documentation\/nRFMeshProvision\/MeshNetworkManager\/provision(unprovisionedDevice:over:)"},{"type":"text","text":"."}],"type":"paragraph"},{"code":["let provisioningManager = try meshNetworkManager.provision(","    unprovisionedDevice: unprovisionedDevice, ","    over: bearer",")","provisioningManager.delegate = ...","provisioningManager.logger = ..."],"type":"codeListing","syntax":"swift"},{"type":"paragraph","inlineContent":[{"text":"The ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/nRFMeshProvision\/documentation\/nRFMeshProvision\/UnprovisionedDevice"},{"text":" and ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/nRFMeshProvision\/documentation\/nRFMeshProvision\/PBGattBearer"},{"text":" instances may be created from the","type":"text"},{"text":" ","type":"text"},{"text":"Bluetooth LE scan result.","type":"text"}]},{"code":["func centralManager(_ central: CBCentralManager, ","                    didDiscover peripheral: CBPeripheral,","                    advertisementData: [String : Any], rssi RSSI: NSNumber) {","    if let unprovisionedDevice = UnprovisionedDevice(advertisementData: advertisementData) {","        let bearer = PBGattBearer(target: peripheral)","        bearer.logger = ...","        bearer.delegate = ...","        bearer.open()","    }","}"],"type":"codeListing","syntax":"swift"},{"content":[{"inlineContent":[{"type":"text","text":"nRF Mesh library supports PB GATT Bearer and PB Remote Bearer."},{"text":" ","type":"text"},{"type":"text","text":"PB Adv Bearer is not supported."}],"type":"paragraph"}],"type":"aside","style":"important","name":"Important"},{"inlineContent":[{"type":"text","text":"To provision a device which does not support PB GATT Bearer a "},{"type":"reference","identifier":"doc:\/\/nRFMeshProvision\/documentation\/nRFMeshProvision\/PBRemoteBearer","isActive":true},{"type":"text","text":" must be used."},{"type":"text","text":" "},{"text":"A node supporting ","type":"text"},{"inlineContent":[{"type":"text","text":"Remote Provisioning Server"}],"type":"emphasis"},{"text":" model must be provisioned and in range of the","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"unprovisioned device. All provisioning messages will be sent via that node."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Provisioning process is initiated by calling "},{"identifier":"doc:\/\/nRFMeshProvision\/documentation\/nRFMeshProvision\/ProvisioningManager\/identify(andAttractFor:)","isActive":true,"type":"reference"}]},{"type":"codeListing","syntax":"swift","code":["try provisioningManager.identify(andAttractFor: 2 \/* seconds *\/)"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"followed by "},{"type":"reference","isActive":true,"identifier":"doc:\/\/nRFMeshProvision\/documentation\/nRFMeshProvision\/ProvisioningManager\/provision(usingAlgorithm:publicKey:authenticationMethod:)"},{"text":".","type":"text"}]},{"syntax":"swift","code":["\/\/ Optional:","provisioningManager.address = ...    \/\/ Defaults to the next available address.","provisioningManager.networkKey = ... \/\/ Defaults to the Primary Network Key.","\/\/ Start:","try provisioningManager.provision(usingAlgorithm:       .BTM_ECDH_P256_HMAC_SHA256_AES_CCM,","                                  publicKey:            ...,","                                  authenticationMethod: ...)"],"type":"codeListing"},{"inlineContent":[{"type":"text","text":"The "},{"isActive":true,"type":"reference","identifier":"doc:\/\/nRFMeshProvision\/documentation\/nRFMeshProvision\/ProvisioningDelegate"},{"type":"text","text":" should be used to provide OOB (Out Of Band) information."}],"type":"paragraph"}],"kind":"content"}],"metadata":{"role":"article","title":"Provisioning","modules":[{"name":"nRFMeshProvision"}],"roleHeading":"Article"},"references":{"doc://nRFMeshProvision/documentation/nRFMeshProvision/Configuration":{"url":"\/documentation\/nrfmeshprovision\/configuration","title":"Configuration","type":"topic","abstract":[{"type":"text","text":"Configuration allows to customize the behavior of the local and remote nodes."}],"kind":"article","role":"article","identifier":"doc:\/\/nRFMeshProvision\/documentation\/nRFMeshProvision\/Configuration"},"doc://nRFMeshProvision/documentation/nRFMeshProvision/ProvisioningManager/provision(usingAlgorithm:publicKey:authenticationMethod:)":{"url":"\/documentation\/nrfmeshprovision\/provisioningmanager\/provision(usingalgorithm:publickey:authenticationmethod:)","kind":"symbol","identifier":"doc:\/\/nRFMeshProvision\/documentation\/nRFMeshProvision\/ProvisioningManager\/provision(usingAlgorithm:publicKey:authenticationMethod:)","title":"provision(usingAlgorithm:publicKey:authenticationMethod:)","type":"topic","abstract":[{"type":"text","text":"This method starts the provisioning of the Unprovisioned Device."}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"provision","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"usingAlgorithm"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:16nRFMeshProvision9AlgorithmO","text":"Algorithm"},{"kind":"text","text":", "},{"text":"publicKey","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"PublicKey","preciseIdentifier":"s:16nRFMeshProvision9PublicKeyO","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"authenticationMethod","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:16nRFMeshProvision20AuthenticationMethodO","text":"AuthenticationMethod","kind":"typeIdentifier"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}],"role":"symbol"},"doc://nRFMeshProvision/documentation/nRFMeshProvision/PBRemoteBearer":{"role":"symbol","url":"\/documentation\/nrfmeshprovision\/pbremotebearer","navigatorTitle":[{"kind":"identifier","text":"PBRemoteBearer"}],"abstract":[{"text":"Implementation of the PB Remote bearer.","type":"text"}],"kind":"symbol","title":"PBRemoteBearer","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"PBRemoteBearer","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/nRFMeshProvision\/documentation\/nRFMeshProvision\/PBRemoteBearer"},"doc://nRFMeshProvision/documentation/nRFMeshProvision/MeshNetworkManager/provision(unprovisionedDevice:over:)":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"provision","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"unprovisionedDevice"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"c:@M@nRFMeshProvision@objc(cs)UnprovisionedDevice","text":"UnprovisionedDevice"},{"kind":"text","text":", "},{"kind":"externalParam","text":"over"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:16nRFMeshProvision18ProvisioningBearerP","text":"ProvisioningBearer"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:16nRFMeshProvision19ProvisioningManagerC","text":"ProvisioningManager","kind":"typeIdentifier"}],"kind":"symbol","identifier":"doc:\/\/nRFMeshProvision\/documentation\/nRFMeshProvision\/MeshNetworkManager\/provision(unprovisionedDevice:over:)","role":"symbol","type":"topic","url":"\/documentation\/nrfmeshprovision\/meshnetworkmanager\/provision(unprovisioneddevice:over:)","abstract":[{"type":"text","text":"This method returns the "},{"identifier":"doc:\/\/nRFMeshProvision\/documentation\/nRFMeshProvision\/ProvisioningManager","isActive":true,"type":"reference"},{"text":" that can be used","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"to provision the given device."}],"title":"provision(unprovisionedDevice:over:)"},"doc://nRFMeshProvision/documentation/nRFMeshProvision/PBGattBearer":{"fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"PBGattBearer","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/nRFMeshProvision\/documentation\/nRFMeshProvision\/PBGattBearer","role":"symbol","type":"topic","navigatorTitle":[{"text":"PBGattBearer","kind":"identifier"}],"url":"\/documentation\/nrfmeshprovision\/pbgattbearer","abstract":[{"text":"The PB GATT bearer is responsible for sending and receiving mesh","type":"text"},{"type":"text","text":" "},{"type":"text","text":"provisioning messages to and from the GATT Proxy Node."}],"title":"PBGattBearer"},"doc://nRFMeshProvision/documentation/nRFMeshProvision/ProvisioningDelegate":{"identifier":"doc:\/\/nRFMeshProvision\/documentation\/nRFMeshProvision\/ProvisioningDelegate","title":"ProvisioningDelegate","abstract":[{"type":"text","text":"The delegate for receiving provisioning events."}],"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"ProvisioningDelegate","kind":"identifier"}],"type":"topic","url":"\/documentation\/nrfmeshprovision\/provisioningdelegate","navigatorTitle":[{"text":"ProvisioningDelegate","kind":"identifier"}],"role":"symbol","kind":"symbol"},"doc://nRFMeshProvision/documentation/nRFMeshProvision":{"kind":"symbol","type":"topic","role":"collection","title":"nRFMeshProvision","url":"\/documentation\/nrfmeshprovision","identifier":"doc:\/\/nRFMeshProvision\/documentation\/nRFMeshProvision","abstract":[{"text":"Provision, configure and control Bluetooth mesh devices with nRF Mesh library.","type":"text"}]},"doc://nRFMeshProvision/documentation/nRFMeshProvision/SendingMessages":{"url":"\/documentation\/nrfmeshprovision\/sendingmessages","title":"Sending messages","type":"topic","abstract":[{"text":"Bluetooth mesh is built on publish-subscribe paradigm. Each node can publish messages and receive messages","type":"text"},{"type":"text","text":" "},{"text":"sent by other nodes.","type":"text"}],"kind":"article","role":"article","identifier":"doc:\/\/nRFMeshProvision\/documentation\/nRFMeshProvision\/SendingMessages"},"doc://nRFMeshProvision/documentation/nRFMeshProvision/ProvisioningManager/identify(andAttractFor:)":{"abstract":[{"text":"This method initializes the provisioning of the device.","type":"text"}],"type":"topic","identifier":"doc:\/\/nRFMeshProvision\/documentation\/nRFMeshProvision\/ProvisioningManager\/identify(andAttractFor:)","kind":"symbol","role":"symbol","title":"identify(andAttractFor:)","url":"\/documentation\/nrfmeshprovision\/provisioningmanager\/identify(andattractfor:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"identify","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"andAttractFor"},{"text":": ","kind":"text"},{"text":"UInt8","kind":"typeIdentifier","preciseIdentifier":"s:s5UInt8V"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}]},"doc://nRFMeshProvision/documentation/nRFMeshProvision/LocalNode":{"identifier":"doc:\/\/nRFMeshProvision\/documentation\/nRFMeshProvision\/LocalNode","abstract":[{"type":"text","text":"Defining the behavior of the node."}],"kind":"article","role":"article","type":"topic","title":"Setting up Local Node","url":"\/documentation\/nrfmeshprovision\/localnode"},"doc://nRFMeshProvision/documentation/nRFMeshProvision/UnprovisionedDevice":{"identifier":"doc:\/\/nRFMeshProvision\/documentation\/nRFMeshProvision\/UnprovisionedDevice","title":"UnprovisionedDevice","abstract":[{"type":"text","text":"A class representing an unprovisioned device."}],"fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"UnprovisionedDevice","kind":"identifier"}],"type":"topic","url":"\/documentation\/nrfmeshprovision\/unprovisioneddevice","navigatorTitle":[{"text":"UnprovisionedDevice","kind":"identifier"}],"role":"symbol","kind":"symbol"},"doc://nRFMeshProvision/documentation/nRFMeshProvision/ProvisioningManager":{"identifier":"doc:\/\/nRFMeshProvision\/documentation\/nRFMeshProvision\/ProvisioningManager","title":"ProvisioningManager","abstract":[{"text":"The manager responsible for provisioning a new device into the mesh network.","type":"text"}],"fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"text":"ProvisioningManager","kind":"identifier"}],"type":"topic","url":"\/documentation\/nrfmeshprovision\/provisioningmanager","navigatorTitle":[{"text":"ProvisioningManager","kind":"identifier"}],"role":"symbol","kind":"symbol"},"doc://nRFMeshProvision/documentation/nRFMeshProvision/Exporting":{"url":"\/documentation\/nrfmeshprovision\/exporting","title":"Exporting network configuration","identifier":"doc:\/\/nRFMeshProvision\/documentation\/nRFMeshProvision\/Exporting","abstract":[{"text":"Export and import feature allows to share mesh network configuration between","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"devices."}],"role":"article","kind":"article","type":"topic"}}}